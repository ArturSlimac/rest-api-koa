// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product_category {
  id         Int       @id @default(autoincrement())
  categoryId String    @unique
  name       String?
  Product    Product[]
}

model Product {
  id                                 Int                                  @id @default(autoincrement())
  productId                          String                               @unique
  unitOfMeasureId                    String
  productAvailability                String?
  unitsInStock                       Int?
  imgLink                            String?
  ctgrId                             Int
  category                           Product_category                     @relation(fields: [ctgrId], references: [id])
  description                        Product_description[]
  price                              Product_price[]
  Product_unit_of_measure_conversion Product_unit_of_measure_conversion[]
  Cart_items                         Cart_items[]
  Order_item                         Order_item[]
}

model Product_description {
  pdId       Int     @id @default(autoincrement())
  prdctId    Int
  product    Product @relation(fields: [prdctId], references: [id])
  languageId String
  name       String?
  lister     String? @db.Text
  short      String? @db.Text
  long       String? @db.Text
}

model Product_price {
  ppId            Int     @id @default(autoincrement())
  prdctId         Int
  product         Product @relation(fields: [prdctId], references: [id])
  currencyId      String?
  price           Float?
  unitOfMeasureId String?
  quantity        Int?
}

model Product_unit_of_measure_conversion {
  converterId       Int     @id @default(autoincrement())
  prdctId           Int
  product           Product @relation(fields: [prdctId], references: [id])
  fromUnitOfMeasure String?
  toUnitOfMeasure   String?
  fromQuantity      Float?
  toQuantity        Float?
}

model Customer {
  id         Int     @id @default(autoincrement())
  customerId String  @unique
  logoLink   String?
  phoneNr    String?
  street     String?
  streetNr   String?
  country    String?
  city       String?
  zipCode    String?

  Purchaser Purchaser[]
  Order     Order[]
}

model Purchaser {
  id          Int      @id @default(autoincrement())
  purchaserId String   @unique
  cstmrId     Int
  customer    Customer @relation(fields: [cstmrId], references: [id])
  auth0Id     String   @default("12345")
  firstName   String   @default("anon")
  lastName    String   @default("anon")
  phoneNumber String   @default("a number")
  Cart        Cart[]
}

model Cart {
  id          Int          @id @default(autoincrement())
  prchsrId    Int          @unique
  purchaser   Purchaser    @relation(fields: [prchsrId], references: [id])
  isPurchased Boolean      @default(false)
  Cart_items  Cart_items[]
}

model Cart_items {
  ci_id    Int     @id @default(autoincrement())
  crtId    Int
  cart     Cart    @relation(fields: [crtId], references: [id])
  prdctId  Int
  product  Product @relation(fields: [prdctId], references: [id])
  quantity Int

  @@unique([crtId, prdctId])
}

model Order {
  id               Int                @id @default(autoincrement())
  cstmrId          Int
  customer         Customer           @relation(fields: [cstmrId], references: [id])
  processedById    Int?
  orderPostedDate  DateTime
  taxAmount        Float
  currencyId       String
  status           String
  track_trace      String?
  Order_item       Order_item[]
  Delivery_address Delivery_address[]
}

model Order_item {
  orderItemId     Int     @id @default(autoincrement())
  ordrId          Int
  order           Order   @relation(fields: [ordrId], references: [id])
  prdctId         Int
  product         Product @relation(fields: [prdctId], references: [id])
  quantity        Int
  unitOfMeasureId String?
  netPrice        Float?

  @@unique([ordrId, prdctId])
}

model Delivery_address {
  id       Int    @id @default(autoincrement())
  ordrId   Int
  order    Order  @relation(fields: [ordrId], references: [id])
  dsId     Int  //delivery service Id
  street   String
  streetNr String
  zip      String
  country  String
}
